---
import { cn } from "@/lib/utils"

export interface Props {
  variant?: "default" | "outline" | "secondary"
  size?: "default" | "sm" | "lg" | "icon"
  class?: string
  [key: string]: any
}

const {
  variant = "default",
  size = "lg",
  class: className,
  ...props
} = Astro.props

const buttonVariants = {
  base: "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-full text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive hover:cursor-pointer",
  variants: {
    default: "bg-primary text-primary-foreground shadow-xs hover:bg-primary/90",
    outline: "border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50",
    secondary: "bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80",
  },
  sizes: {
    default: "h-9 px-4 py-2 has-[>svg]:px-3",
    sm: "h-8 rounded-full gap-1.5 px-3 has-[>svg]:px-2.5",
    lg: "h-10 rounded-full px-6 has-[>svg]:px-4",
    icon: "size-9",
  }
}

const classes = cn(
  buttonVariants.base,
  buttonVariants.variants[variant],
  buttonVariants.sizes[size],
  className
)
---

<button
  data-slot="button"
  class={classes}
  {...props}
>
  <slot />
</button>
