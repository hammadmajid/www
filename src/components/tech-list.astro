---
import Nextdotjs from "simple-icons-astro/Nextdotjs";
import React from "simple-icons-astro/React";
import Tailwindcss from "simple-icons-astro/Tailwindcss";
import Mui from "simple-icons-astro/Mui";
import Terraform from "simple-icons-astro/Terraform";
import Ansible from "simple-icons-astro/Ansible";
import Zod from "simple-icons-astro/Zod";
import Typescript from "simple-icons-astro/Typescript";
import Nodedotjs from "simple-icons-astro/Nodedotjs";
import Express from "simple-icons-astro/Express";
import Trpc from "simple-icons-astro/Trpc";
import Sanity from "simple-icons-astro/Sanity";
import Prisma from "simple-icons-astro/Prisma";
import Clerk from "simple-icons-astro/Clerk";
import Drizzle from "simple-icons-astro/Drizzle";
import Supabase from "simple-icons-astro/Supabase";
import Stripe from "simple-icons-astro/Stripe";
import Vercel from "simple-icons-astro/Vercel";
import Docker from "simple-icons-astro/Docker";
import Reactrouter from "simple-icons-astro/Reactrouter";
import Shadcnui from "simple-icons-astro/Shadcnui";
import Caddy from "simple-icons-astro/Caddy";
import Mongodb from "simple-icons-astro/Mongodb";
import Postgresql from "simple-icons-astro/Postgresql";
import Resend from "simple-icons-astro/Resend";
import Svelte from "simple-icons-astro/Svelte";
import Go from "simple-icons-astro/Go";
import Cloudflareworkers from "simple-icons-astro/Cloudflareworkers";
import Sqlite from "simple-icons-astro/Sqlite";
import Skeleton from "simple-icons-astro/Skeleton";
import Mail from "@lucide/astro/icons/mail";

import type { Tech } from "@/types/tech";

export interface Props {
  stack: Tech[];
}

const { stack } = Astro.props;

const techIcons: Record<Tech, { icon: any; url: string }> = {
  "Next.js": { icon: Nextdotjs, url: "https://nextjs.org" },
  React: { icon: React, url: "https://react.dev" },
  Tailwind: { icon: Tailwindcss, url: "https://tailwindcss.com" },
  MUI: { icon: Mui, url: "https://mui.com" },
  Terraform: { icon: Terraform, url: "https://terraform.io" },
  Ansible: { icon: Ansible, url: "https://ansible.com" },
  Zod: { icon: Zod, url: "https://zod.dev" },
  TypeScript: { icon: Typescript, url: "https://typescriptlang.org" },
  "Node.js": { icon: Nodedotjs, url: "https://nodejs.org" },
  Express: { icon: Express, url: "https://expressjs.com" },
  tRPC: { icon: Trpc, url: "https://trpc.io" },
  Sanity: { icon: Sanity, url: "https://sanity.io" },
  Prisma: { icon: Prisma, url: "https://prisma.io" },
  Clerk: { icon: Clerk, url: "https://clerk.com" },
  Drizzle: { icon: Drizzle, url: "https://orm.drizzle.team" },
  Supabase: { icon: Supabase, url: "https://supabase.com" },
  Stripe: { icon: Stripe, url: "https://stripe.com" },
  Vercel: { icon: Vercel, url: "https://vercel.com" },
  Docker: { icon: Docker, url: "https://docker.com" },
  "React Router": { icon: Reactrouter, url: "https://reactrouter.com" },
  "shadcn/ui": { icon: Shadcnui, url: "https://ui.shadcn.com" },
  Caddy: { icon: Caddy, url: "https://caddyserver.com" },
  MongoDB: { icon: Mongodb, url: "https://mongodb.com" },
  PostgreSQL: { icon: Postgresql, url: "https://postgresql.org" },
  Resend: { icon: Resend, url: "https://resend.com" },
  Svelte: { icon: Svelte, url: "https://svelte.dev" },
  Go: { icon: Go, url: "https://go.dev" },
  Workers: { icon: Cloudflareworkers, url: "https://workers.cloudflare.com" },
  Skeleton: { icon: Skeleton, url: "https://skeleton.dev" },
  SQLite: { icon: Sqlite, url: "https://sqlite.org" },
  Inbound: {icon: Mail, url: "https://inbound.new"}
};

// Export techIcons for use in other components
export { techIcons };

const pillBaseStyles =
  "inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden";
const pillColorStyles =
  "text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground";
---

<div class="flex flex-wrap gap-2">
  {
    stack.map((tech: Tech) => {
      const techInfo = techIcons[tech];
      const IconComponent = techInfo?.icon;
      return (
        <a
          href={techInfo?.url}
          target="_blank"
          rel="noopener noreferrer"
          class={`${pillBaseStyles} ${pillColorStyles} no-underline hover:bg-accent hover:text-accent-foreground transition-colors`}
        >
          {IconComponent && <IconComponent />}
          {tech}
        </a>
      );
    })
  }
</div>
